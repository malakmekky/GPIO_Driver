

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Jul 15 15:38:57 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Version 2.40
    13                           ; Generated 17/11/2021 GMT
    14                           ; 
    15                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0004                     fsr             equ	4
    48     0004                     fsr0            equ	4
    49     0000                     indf            equ	0
    50     0000                     indf0           equ	0
    51     0002                     pc              equ	2
    52     0002                     pcl             equ	2
    53     000A                     pclath          equ	10
    54     0003                     status          equ	3
    55     0000                     INDF            equ	0	;# 
    56     0001                     TMR0            equ	1	;# 
    57     0002                     PCL             equ	2	;# 
    58     0003                     STATUS          equ	3	;# 
    59     0004                     FSR             equ	4	;# 
    60     0005                     PORTA           equ	5	;# 
    61     0006                     PORTB           equ	6	;# 
    62     0007                     PORTC           equ	7	;# 
    63     0008                     PORTD           equ	8	;# 
    64     0009                     PORTE           equ	9	;# 
    65     000A                     PCLATH          equ	10	;# 
    66     000B                     INTCON          equ	11	;# 
    67     000C                     PIR1            equ	12	;# 
    68     000D                     PIR2            equ	13	;# 
    69     000E                     TMR1            equ	14	;# 
    70     000E                     TMR1L           equ	14	;# 
    71     000F                     TMR1H           equ	15	;# 
    72     0010                     T1CON           equ	16	;# 
    73     0011                     TMR2            equ	17	;# 
    74     0012                     T2CON           equ	18	;# 
    75     0013                     SSPBUF          equ	19	;# 
    76     0014                     SSPCON          equ	20	;# 
    77     0015                     CCPR1           equ	21	;# 
    78     0015                     CCPR1L          equ	21	;# 
    79     0016                     CCPR1H          equ	22	;# 
    80     0017                     CCP1CON         equ	23	;# 
    81     0018                     RCSTA           equ	24	;# 
    82     0019                     TXREG           equ	25	;# 
    83     001A                     RCREG           equ	26	;# 
    84     001B                     CCPR2           equ	27	;# 
    85     001B                     CCPR2L          equ	27	;# 
    86     001C                     CCPR2H          equ	28	;# 
    87     001D                     CCP2CON         equ	29	;# 
    88     001E                     ADRESH          equ	30	;# 
    89     001F                     ADCON0          equ	31	;# 
    90     0081                     OPTION_REG      equ	129	;# 
    91     0085                     TRISA           equ	133	;# 
    92     0086                     TRISB           equ	134	;# 
    93     0087                     TRISC           equ	135	;# 
    94     0088                     TRISD           equ	136	;# 
    95     0089                     TRISE           equ	137	;# 
    96     008C                     PIE1            equ	140	;# 
    97     008D                     PIE2            equ	141	;# 
    98     008E                     PCON            equ	142	;# 
    99     0091                     SSPCON2         equ	145	;# 
   100     0092                     PR2             equ	146	;# 
   101     0093                     SSPADD          equ	147	;# 
   102     0094                     SSPSTAT         equ	148	;# 
   103     0098                     TXSTA           equ	152	;# 
   104     0099                     SPBRG           equ	153	;# 
   105     009C                     CMCON           equ	156	;# 
   106     009D                     CVRCON          equ	157	;# 
   107     009E                     ADRESL          equ	158	;# 
   108     009F                     ADCON1          equ	159	;# 
   109     010C                     EEDATA          equ	268	;# 
   110     010D                     EEADR           equ	269	;# 
   111     010E                     EEDATH          equ	270	;# 
   112     010F                     EEADRH          equ	271	;# 
   113     018C                     EECON1          equ	396	;# 
   114     018D                     EECON2          equ	397	;# 
   115                           
   116                           	psect	cinit
   117     07FC                     start_initialization:	
   118                           ; #config settings
   119                           
   120     07FC                     __initialization:
   121     07FC                     end_of_initialization:	
   122                           ;End of C runtime variable initialization code
   123                           
   124     07FC                     __end_of__initialization:
   125     07FC  0183               	clrf	3
   126     07FD  120A  118A  2D89   	ljmp	_main	;jump to C main() function
   127                           
   128                           	psect	cstackCOMMON
   129     0070                     __pcstackCOMMON:
   130     0070                     ?_delayMS:
   131     0070                     ?_main:	
   132                           ; 1 bytes @ 0x0
   133                           
   134     0070                     delayMS@M:	
   135                           ; 1 bytes @ 0x0
   136                           
   137                           
   138                           ; 2 bytes @ 0x0
   139     0070                     	ds	2
   140     0072                     ??_delayMS:
   141                           
   142                           ; 1 bytes @ 0x2
   143     0072                     	ds	1
   144     0073                     delayMS@i:
   145                           
   146                           ; 2 bytes @ 0x3
   147     0073                     	ds	2
   148     0075                     delayMS@j:
   149                           
   150                           ; 2 bytes @ 0x5
   151     0075                     	ds	2
   152     0077                     ??_main:
   153                           
   154                           ; 1 bytes @ 0x7
   155     0077                     	ds	1
   156     0078                     main@modeNum:
   157                           
   158                           ; 2 bytes @ 0x8
   159     0078                     	ds	2
   160                           
   161                           	psect	maintext
   162     0589                     __pmaintext:	
   163 ;;
   164 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   165 ;;
   166 ;; *************** function _main *****************
   167 ;; Defined at:
   168 ;;		line 50 in file "main.c"
   169 ;; Parameters:    Size  Location     Type
   170 ;;		None
   171 ;; Auto vars:     Size  Location     Type
   172 ;;  modeNum         2    8[COMMON] int 
   173 ;; Return value:  Size  Location     Type
   174 ;;                  1    wreg      void 
   175 ;; Registers used:
   176 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   177 ;; Tracked objects:
   178 ;;		On entry : B00/0
   179 ;;		On exit  : 0/0
   180 ;;		Unchanged: 0/0
   181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   182 ;;      Params:         0       0       0       0       0
   183 ;;      Locals:         2       0       0       0       0
   184 ;;      Temps:          1       0       0       0       0
   185 ;;      Totals:         3       0       0       0       0
   186 ;;Total ram usage:        3 bytes
   187 ;; Hardware stack levels required when called: 1
   188 ;; This function calls:
   189 ;;		_delayMS
   190 ;; This function is called by:
   191 ;;		Startup code after reset
   192 ;; This function uses a non-reentrant model
   193 ;;
   194                           
   195     0589                     _main:	
   196                           ;psect for function _main
   197                           
   198     0589                     l759:	
   199                           ;incstack = 0
   200                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   201                           
   202                           
   203                           ;main.c: 52:     *((char*)0x87) = *((char*)0x87) & ~(1 << 3);
   204     0589  1683               	bsf	3,5	;RP0=1, select bank1
   205     058A  1303               	bcf	3,6	;RP1=0, select bank1
   206     058B  0807               	movf	7,w
   207     058C  39F7               	andlw	247
   208     058D  0087               	movwf	7
   209                           
   210                           ;main.c: 53:     *((char*)0x87) = *((char*)0x87) & ~(1 << 2);
   211     058E  0807               	movf	7,w
   212     058F  39FB               	andlw	251
   213     0590  0087               	movwf	7
   214                           
   215                           ;main.c: 54:     *((char*)0x87) = *((char*)0x87) & ~(1 << 1);
   216     0591  0807               	movf	7,w
   217     0592  39FD               	andlw	253
   218     0593  0087               	movwf	7
   219                           
   220                           ;main.c: 55:     *((char*)0x86) = *((char*)0x86) | (1 << 5);
   221     0594  0806               	movf	6,w
   222     0595  3820               	iorlw	32
   223     0596  0086               	movwf	6
   224     0597                     l761:
   225                           
   226                           ;main.c: 56:     int modeNum=1;
   227     0597  3001               	movlw	1
   228     0598  00F8               	movwf	main@modeNum
   229     0599  3000               	movlw	0
   230     059A  00F9               	movwf	main@modeNum+1
   231     059B                     l763:
   232                           
   233                           ;main.c: 60:     {;main.c: 61:         if(((*((char*)0x06)>>5)&0x01)==0)
   234     059B  1283               	bcf	3,5	;RP0=0, select bank0
   235     059C  1303               	bcf	3,6	;RP1=0, select bank0
   236     059D  0806               	movf	6,w
   237     059E  00F7               	movwf	??_main
   238     059F  3005               	movlw	5
   239     05A0                     u255:
   240     05A0  1003               	clrc
   241     05A1  0CF7               	rrf	??_main,f
   242     05A2  3EFF               	addlw	-1
   243     05A3  1D03               	skipz
   244     05A4  2DA0               	goto	u255
   245     05A5  1877               	btfsc	??_main,0
   246     05A6  2DA8               	goto	u261
   247     05A7  2DA9               	goto	u260
   248     05A8                     u261:
   249     05A8  2D9B               	goto	l763
   250     05A9                     u260:
   251     05A9  2DD3               	goto	l775
   252     05AA                     l767:
   253                           
   254                           ;main.c: 64:                 *((char*)0x87) = *((char*)0x87) & ~(1 << 3);
   255     05AA  1683               	bsf	3,5	;RP0=1, select bank1
   256     05AB  1303               	bcf	3,6	;RP1=0, select bank1
   257     05AC  0807               	movf	7,w
   258     05AD  39F7               	andlw	247
   259     05AE  0087               	movwf	7
   260                           
   261                           ;main.c: 65:                 *((char*)0x87) = *((char*)0x87) & ~(1 << 2);
   262     05AF  0807               	movf	7,w
   263     05B0  39FB               	andlw	251
   264     05B1  0087               	movwf	7
   265                           
   266                           ;main.c: 66:                 *((char*)0x87) = *((char*)0x87) & ~(1 << 1);
   267     05B2  0807               	movf	7,w
   268     05B3  39FD               	andlw	253
   269     05B4  0087               	movwf	7
   270     05B5                     l769:
   271                           
   272                           ;main.c: 67:                 delayMS(250);
   273     05B5  30FA               	movlw	250
   274     05B6  00F0               	movwf	delayMS@M
   275     05B7  3000               	movlw	0
   276     05B8  00F1               	movwf	delayMS@M+1
   277     05B9  120A  118A  255C  120A  118A  	fcall	_delayMS
   278     05BE                     l771:
   279                           
   280                           ;main.c: 68:                 if(((*((char*)0x06)>>5)&0x01)==0){
   281     05BE  1283               	bcf	3,5	;RP0=0, select bank0
   282     05BF  1303               	bcf	3,6	;RP1=0, select bank0
   283     05C0  0806               	movf	6,w
   284     05C1  00F7               	movwf	??_main
   285     05C2  3005               	movlw	5
   286     05C3                     u275:
   287     05C3  1003               	clrc
   288     05C4  0CF7               	rrf	??_main,f
   289     05C5  3EFF               	addlw	-1
   290     05C6  1D03               	skipz
   291     05C7  2DC3               	goto	u275
   292     05C8  1877               	btfsc	??_main,0
   293     05C9  2DCB               	goto	u281
   294     05CA  2DCC               	goto	u280
   295     05CB                     u281:
   296     05CB  2DD3               	goto	l775
   297     05CC                     u280:
   298     05CC                     l773:
   299                           
   300                           ;main.c: 69:                       modeNum++;
   301     05CC  3001               	movlw	1
   302     05CD  07F8               	addwf	main@modeNum,f
   303     05CE  1803               	skipnc
   304     05CF  0AF9               	incf	main@modeNum+1,f
   305     05D0  3000               	movlw	0
   306     05D1  07F9               	addwf	main@modeNum+1,f
   307                           
   308                           ;main.c: 70:                       break;
   309     05D2  2E15               	goto	l791
   310     05D3                     l775:
   311                           
   312                           ;main.c: 63:             while (modeNum ==1){
   313     05D3  0378               	decf	main@modeNum,w
   314     05D4  0479               	iorwf	main@modeNum+1,w
   315     05D5  1903               	btfsc	3,2
   316     05D6  2DD8               	goto	u291
   317     05D7  2DD9               	goto	u290
   318     05D8                     u291:
   319     05D8  2DAA               	goto	l767
   320     05D9                     u290:
   321     05D9  2E15               	goto	l791
   322     05DA                     l777:
   323                           
   324                           ;main.c: 74:             {;main.c: 75:                  delayMS(250);
   325     05DA  30FA               	movlw	250
   326     05DB  00F0               	movwf	delayMS@M
   327     05DC  3000               	movlw	0
   328     05DD  00F1               	movwf	delayMS@M+1
   329     05DE  120A  118A  255C  120A  118A  	fcall	_delayMS
   330     05E3                     l779:
   331                           
   332                           ;main.c: 76:                  *((char*)0x07) = *((char*)0x07) | (1 << 3);
   333     05E3  1283               	bcf	3,5	;RP0=0, select bank0
   334     05E4  1303               	bcf	3,6	;RP1=0, select bank0
   335     05E5  0807               	movf	7,w
   336     05E6  3808               	iorlw	8
   337     05E7  0087               	movwf	7
   338     05E8                     l781:
   339                           
   340                           ;main.c: 77:                  *((char*)0x07) = *((char*)0x07) | (1 << 2);
   341     05E8  0807               	movf	7,w
   342     05E9  3804               	iorlw	4
   343     05EA  0087               	movwf	7
   344     05EB                     l783:
   345                           
   346                           ;main.c: 78:                  *((char*)0x07) = *((char*)0x07) | (1 << 1);
   347     05EB  0807               	movf	7,w
   348     05EC  3802               	iorlw	2
   349     05ED  0087               	movwf	7
   350     05EE                     l785:
   351                           
   352                           ;main.c: 79:                  delayMS(250);
   353     05EE  30FA               	movlw	250
   354     05EF  00F0               	movwf	delayMS@M
   355     05F0  3000               	movlw	0
   356     05F1  00F1               	movwf	delayMS@M+1
   357     05F2  120A  118A  255C  120A  118A  	fcall	_delayMS
   358                           
   359                           ;main.c: 81:                  *((char*)0x07) = *((char*)0x07) & ~(1 << 3);
   360     05F7  1283               	bcf	3,5	;RP0=0, select bank0
   361     05F8  1303               	bcf	3,6	;RP1=0, select bank0
   362     05F9  0807               	movf	7,w
   363     05FA  39F7               	andlw	247
   364     05FB  0087               	movwf	7
   365                           
   366                           ;main.c: 82:                  *((char*)0x07) = *((char*)0x07) & ~(1 << 2);
   367     05FC  0807               	movf	7,w
   368     05FD  39FB               	andlw	251
   369     05FE  0087               	movwf	7
   370                           
   371                           ;main.c: 83:                  *((char*)0x07) = *((char*)0x07) & ~(1 << 1);
   372     05FF  0807               	movf	7,w
   373     0600  39FD               	andlw	253
   374     0601  0087               	movwf	7
   375     0602                     l787:
   376                           
   377                           ;main.c: 84:                  if(((*((char*)0x06)>>5)&0x01)==0){
   378     0602  0806               	movf	6,w
   379     0603  00F7               	movwf	??_main
   380     0604  3005               	movlw	5
   381     0605                     u305:
   382     0605  1003               	clrc
   383     0606  0CF7               	rrf	??_main,f
   384     0607  3EFF               	addlw	-1
   385     0608  1D03               	skipz
   386     0609  2E05               	goto	u305
   387     060A  1877               	btfsc	??_main,0
   388     060B  2E0D               	goto	u311
   389     060C  2E0E               	goto	u310
   390     060D                     u311:
   391     060D  2E15               	goto	l791
   392     060E                     u310:
   393     060E                     l789:
   394                           
   395                           ;main.c: 85:                       modeNum++;
   396     060E  3001               	movlw	1
   397     060F  07F8               	addwf	main@modeNum,f
   398     0610  1803               	skipnc
   399     0611  0AF9               	incf	main@modeNum+1,f
   400     0612  3000               	movlw	0
   401     0613  07F9               	addwf	main@modeNum+1,f
   402                           
   403                           ;main.c: 86:                       break;
   404     0614  2E1C               	goto	l793
   405     0615                     l791:
   406                           
   407                           ;main.c: 73:             while(modeNum==2)
   408     0615  3002               	movlw	2
   409     0616  0678               	xorwf	main@modeNum,w
   410     0617  0479               	iorwf	main@modeNum+1,w
   411     0618  1903               	btfsc	3,2
   412     0619  2E1B               	goto	u321
   413     061A  2E1C               	goto	u320
   414     061B                     u321:
   415     061B  2DDA               	goto	l777
   416     061C                     u320:
   417     061C                     l793:
   418                           
   419                           ;main.c: 92:             delayMS(250);
   420     061C  30FA               	movlw	250
   421     061D  00F0               	movwf	delayMS@M
   422     061E  3000               	movlw	0
   423     061F  00F1               	movwf	delayMS@M+1
   424     0620  120A  118A  255C  120A  118A  	fcall	_delayMS
   425                           
   426                           ;main.c: 93:             while(modeNum==3)
   427     0625  2E79               	goto	l811
   428     0626                     l795:
   429                           
   430                           ;main.c: 94:             {;main.c: 95:              *((char*)0x07) = *((char*)0x07) | (1
      +                           << 3);
   431     0626  1283               	bcf	3,5	;RP0=0, select bank0
   432     0627  1303               	bcf	3,6	;RP1=0, select bank0
   433     0628  0807               	movf	7,w
   434     0629  3808               	iorlw	8
   435     062A  0087               	movwf	7
   436     062B                     l797:
   437                           
   438                           ;main.c: 96:              delayMS(250);
   439     062B  30FA               	movlw	250
   440     062C  00F0               	movwf	delayMS@M
   441     062D  3000               	movlw	0
   442     062E  00F1               	movwf	delayMS@M+1
   443     062F  120A  118A  255C  120A  118A  	fcall	_delayMS
   444     0634                     l799:
   445                           
   446                           ;main.c: 97:              *((char*)0x07) = *((char*)0x07) | (1 << 2);
   447     0634  1283               	bcf	3,5	;RP0=0, select bank0
   448     0635  1303               	bcf	3,6	;RP1=0, select bank0
   449     0636  0807               	movf	7,w
   450     0637  3804               	iorlw	4
   451     0638  0087               	movwf	7
   452                           
   453                           ;main.c: 98:              delayMS(250);
   454     0639  30FA               	movlw	250
   455     063A  00F0               	movwf	delayMS@M
   456     063B  3000               	movlw	0
   457     063C  00F1               	movwf	delayMS@M+1
   458     063D  120A  118A  255C  120A  118A  	fcall	_delayMS
   459     0642                     l801:
   460                           
   461                           ;main.c: 99:              *((char*)0x07) = *((char*)0x07) | (1 << 1);
   462     0642  1283               	bcf	3,5	;RP0=0, select bank0
   463     0643  1303               	bcf	3,6	;RP1=0, select bank0
   464     0644  0807               	movf	7,w
   465     0645  3802               	iorlw	2
   466     0646  0087               	movwf	7
   467     0647                     l803:
   468                           
   469                           ;main.c: 100:              delayMS(250);
   470     0647  30FA               	movlw	250
   471     0648  00F0               	movwf	delayMS@M
   472     0649  3000               	movlw	0
   473     064A  00F1               	movwf	delayMS@M+1
   474     064B  120A  118A  255C  120A  118A  	fcall	_delayMS
   475                           
   476                           ;main.c: 101:                *((char*)0x07) = *((char*)0x07) & ~(1 << 3);
   477     0650  1283               	bcf	3,5	;RP0=0, select bank0
   478     0651  1303               	bcf	3,6	;RP1=0, select bank0
   479     0652  0807               	movf	7,w
   480     0653  39F7               	andlw	247
   481     0654  0087               	movwf	7
   482                           
   483                           ;main.c: 102:                   *((char*)0x07) = *((char*)0x07) & ~(1 << 2);
   484     0655  0807               	movf	7,w
   485     0656  39FB               	andlw	251
   486     0657  0087               	movwf	7
   487                           
   488                           ;main.c: 103:                   *((char*)0x07) = *((char*)0x07) & ~(1 << 1);
   489     0658  0807               	movf	7,w
   490     0659  39FD               	andlw	253
   491     065A  0087               	movwf	7
   492     065B                     l805:
   493                           
   494                           ;main.c: 104:              delayMS(250);
   495     065B  30FA               	movlw	250
   496     065C  00F0               	movwf	delayMS@M
   497     065D  3000               	movlw	0
   498     065E  00F1               	movwf	delayMS@M+1
   499     065F  120A  118A  255C  120A  118A  	fcall	_delayMS
   500     0664                     l807:
   501                           
   502                           ;main.c: 105:             if(((*((char*)0x06)>>5)&0x01)==0){
   503     0664  1283               	bcf	3,5	;RP0=0, select bank0
   504     0665  1303               	bcf	3,6	;RP1=0, select bank0
   505     0666  0806               	movf	6,w
   506     0667  00F7               	movwf	??_main
   507     0668  3005               	movlw	5
   508     0669                     u335:
   509     0669  1003               	clrc
   510     066A  0CF7               	rrf	??_main,f
   511     066B  3EFF               	addlw	-1
   512     066C  1D03               	skipz
   513     066D  2E69               	goto	u335
   514     066E  1877               	btfsc	??_main,0
   515     066F  2E71               	goto	u341
   516     0670  2E72               	goto	u340
   517     0671                     u341:
   518     0671  2E79               	goto	l811
   519     0672                     u340:
   520     0672                     l809:
   521                           
   522                           ;main.c: 106:                       modeNum++;
   523     0672  3001               	movlw	1
   524     0673  07F8               	addwf	main@modeNum,f
   525     0674  1803               	skipnc
   526     0675  0AF9               	incf	main@modeNum+1,f
   527     0676  3000               	movlw	0
   528     0677  07F9               	addwf	main@modeNum+1,f
   529                           
   530                           ;main.c: 107:                       break;
   531     0678  2EEA               	goto	l835
   532     0679                     l811:
   533                           
   534                           ;main.c: 93:             while(modeNum==3)
   535     0679  3003               	movlw	3
   536     067A  0678               	xorwf	main@modeNum,w
   537     067B  0479               	iorwf	main@modeNum+1,w
   538     067C  1903               	btfsc	3,2
   539     067D  2E7F               	goto	u351
   540     067E  2E80               	goto	u350
   541     067F                     u351:
   542     067F  2E26               	goto	l795
   543     0680                     u350:
   544     0680  2EEA               	goto	l835
   545     0681                     l813:
   546                           
   547                           ;main.c: 111:              {;main.c: 112:               *((char*)0x07) = *((char*)0x07) 
      +                          | (1 << 3);
   548     0681  1283               	bcf	3,5	;RP0=0, select bank0
   549     0682  1303               	bcf	3,6	;RP1=0, select bank0
   550     0683  0807               	movf	7,w
   551     0684  3808               	iorlw	8
   552     0685  0087               	movwf	7
   553     0686                     l815:
   554                           
   555                           ;main.c: 113:              delayMS(250);
   556     0686  30FA               	movlw	250
   557     0687  00F0               	movwf	delayMS@M
   558     0688  3000               	movlw	0
   559     0689  00F1               	movwf	delayMS@M+1
   560     068A  120A  118A  255C  120A  118A  	fcall	_delayMS
   561     068F                     l817:
   562                           
   563                           ;main.c: 114:             *((char*)0x07) = *((char*)0x07) & ~(1 << 3);
   564     068F  1283               	bcf	3,5	;RP0=0, select bank0
   565     0690  1303               	bcf	3,6	;RP1=0, select bank0
   566     0691  0807               	movf	7,w
   567     0692  39F7               	andlw	247
   568     0693  0087               	movwf	7
   569                           
   570                           ;main.c: 115:              delayMS(250);
   571     0694  30FA               	movlw	250
   572     0695  00F0               	movwf	delayMS@M
   573     0696  3000               	movlw	0
   574     0697  00F1               	movwf	delayMS@M+1
   575     0698  120A  118A  255C  120A  118A  	fcall	_delayMS
   576     069D                     l819:
   577                           
   578                           ;main.c: 116:             *((char*)0x07) = *((char*)0x07) | (1 << 2);
   579     069D  1283               	bcf	3,5	;RP0=0, select bank0
   580     069E  1303               	bcf	3,6	;RP1=0, select bank0
   581     069F  0807               	movf	7,w
   582     06A0  3804               	iorlw	4
   583     06A1  0087               	movwf	7
   584     06A2                     l821:
   585                           
   586                           ;main.c: 117:               delayMS(250);
   587     06A2  30FA               	movlw	250
   588     06A3  00F0               	movwf	delayMS@M
   589     06A4  3000               	movlw	0
   590     06A5  00F1               	movwf	delayMS@M+1
   591     06A6  120A  118A  255C  120A  118A  	fcall	_delayMS
   592                           
   593                           ;main.c: 118:               *((char*)0x07) = *((char*)0x07) & ~(1 << 2);
   594     06AB  1283               	bcf	3,5	;RP0=0, select bank0
   595     06AC  1303               	bcf	3,6	;RP1=0, select bank0
   596     06AD  0807               	movf	7,w
   597     06AE  39FB               	andlw	251
   598     06AF  0087               	movwf	7
   599     06B0                     l823:
   600                           
   601                           ;main.c: 119:               delayMS(250);
   602     06B0  30FA               	movlw	250
   603     06B1  00F0               	movwf	delayMS@M
   604     06B2  3000               	movlw	0
   605     06B3  00F1               	movwf	delayMS@M+1
   606     06B4  120A  118A  255C  120A  118A  	fcall	_delayMS
   607     06B9                     l825:
   608                           
   609                           ;main.c: 120:              *((char*)0x07) = *((char*)0x07) | (1 << 1);
   610     06B9  1283               	bcf	3,5	;RP0=0, select bank0
   611     06BA  1303               	bcf	3,6	;RP1=0, select bank0
   612     06BB  0807               	movf	7,w
   613     06BC  3802               	iorlw	2
   614     06BD  0087               	movwf	7
   615                           
   616                           ;main.c: 121:               delayMS(250);
   617     06BE  30FA               	movlw	250
   618     06BF  00F0               	movwf	delayMS@M
   619     06C0  3000               	movlw	0
   620     06C1  00F1               	movwf	delayMS@M+1
   621     06C2  120A  118A  255C  120A  118A  	fcall	_delayMS
   622     06C7                     l827:
   623                           
   624                           ;main.c: 122:               *((char*)0x07) = *((char*)0x07) & ~(1 << 1);
   625     06C7  1283               	bcf	3,5	;RP0=0, select bank0
   626     06C8  1303               	bcf	3,6	;RP1=0, select bank0
   627     06C9  0807               	movf	7,w
   628     06CA  39FD               	andlw	253
   629     06CB  0087               	movwf	7
   630     06CC                     l829:
   631                           
   632                           ;main.c: 123:                delayMS(250);
   633     06CC  30FA               	movlw	250
   634     06CD  00F0               	movwf	delayMS@M
   635     06CE  3000               	movlw	0
   636     06CF  00F1               	movwf	delayMS@M+1
   637     06D0  120A  118A  255C  120A  118A  	fcall	_delayMS
   638     06D5                     l831:
   639                           
   640                           ;main.c: 124:               if(((*((char*)0x06)>>5)&0x01)==0){
   641     06D5  1283               	bcf	3,5	;RP0=0, select bank0
   642     06D6  1303               	bcf	3,6	;RP1=0, select bank0
   643     06D7  0806               	movf	6,w
   644     06D8  00F7               	movwf	??_main
   645     06D9  3005               	movlw	5
   646     06DA                     u365:
   647     06DA  1003               	clrc
   648     06DB  0CF7               	rrf	??_main,f
   649     06DC  3EFF               	addlw	-1
   650     06DD  1D03               	skipz
   651     06DE  2EDA               	goto	u365
   652     06DF  1877               	btfsc	??_main,0
   653     06E0  2EE2               	goto	u371
   654     06E1  2EE3               	goto	u370
   655     06E2                     u371:
   656     06E2  2EEA               	goto	l835
   657     06E3                     u370:
   658     06E3                     l833:
   659                           
   660                           ;main.c: 125:                       modeNum++;
   661     06E3  3001               	movlw	1
   662     06E4  07F8               	addwf	main@modeNum,f
   663     06E5  1803               	skipnc
   664     06E6  0AF9               	incf	main@modeNum+1,f
   665     06E7  3000               	movlw	0
   666     06E8  07F9               	addwf	main@modeNum+1,f
   667                           
   668                           ;main.c: 126:                       break;
   669     06E9  2F3A               	goto	l855
   670     06EA                     l835:
   671                           
   672                           ;main.c: 110:              while(modeNum==4)
   673     06EA  3004               	movlw	4
   674     06EB  0678               	xorwf	main@modeNum,w
   675     06EC  0479               	iorwf	main@modeNum+1,w
   676     06ED  1903               	btfsc	3,2
   677     06EE  2EF0               	goto	u381
   678     06EF  2EF1               	goto	u380
   679     06F0                     u381:
   680     06F0  2E81               	goto	l813
   681     06F1                     u380:
   682     06F1  2F3A               	goto	l855
   683     06F2                     l837:
   684                           
   685                           ;main.c: 130:             {;main.c: 131:              *((char*)0x07) = *((char*)0x07) | 
      +                          (1 << 3);
   686     06F2  1283               	bcf	3,5	;RP0=0, select bank0
   687     06F3  1303               	bcf	3,6	;RP1=0, select bank0
   688     06F4  0807               	movf	7,w
   689     06F5  3808               	iorlw	8
   690     06F6  0087               	movwf	7
   691                           
   692                           ;main.c: 132:               *((char*)0x07) = *((char*)0x07) | (1 << 1);
   693     06F7  0807               	movf	7,w
   694     06F8  3802               	iorlw	2
   695     06F9  0087               	movwf	7
   696     06FA                     l839:
   697                           
   698                           ;main.c: 133:                delayMS(250);
   699     06FA  30FA               	movlw	250
   700     06FB  00F0               	movwf	delayMS@M
   701     06FC  3000               	movlw	0
   702     06FD  00F1               	movwf	delayMS@M+1
   703     06FE  120A  118A  255C  120A  118A  	fcall	_delayMS
   704     0703                     l841:
   705                           
   706                           ;main.c: 134:             *((char*)0x07) = *((char*)0x07) & ~(1 << 3);
   707     0703  1283               	bcf	3,5	;RP0=0, select bank0
   708     0704  1303               	bcf	3,6	;RP1=0, select bank0
   709     0705  0807               	movf	7,w
   710     0706  39F7               	andlw	247
   711     0707  0087               	movwf	7
   712     0708                     l843:
   713                           
   714                           ;main.c: 135:              *((char*)0x07) = *((char*)0x07) & ~(1 << 1);
   715     0708  0807               	movf	7,w
   716     0709  39FD               	andlw	253
   717     070A  0087               	movwf	7
   718     070B                     l845:
   719                           
   720                           ;main.c: 136:              *((char*)0x07) = *((char*)0x07) | (1 << 2);
   721     070B  0807               	movf	7,w
   722     070C  3804               	iorlw	4
   723     070D  0087               	movwf	7
   724                           
   725                           ;main.c: 137:              delayMS(250);
   726     070E  30FA               	movlw	250
   727     070F  00F0               	movwf	delayMS@M
   728     0710  3000               	movlw	0
   729     0711  00F1               	movwf	delayMS@M+1
   730     0712  120A  118A  255C  120A  118A  	fcall	_delayMS
   731     0717                     l847:
   732                           
   733                           ;main.c: 138:                *((char*)0x07) = *((char*)0x07) & ~(1 << 2);
   734     0717  1283               	bcf	3,5	;RP0=0, select bank0
   735     0718  1303               	bcf	3,6	;RP1=0, select bank0
   736     0719  0807               	movf	7,w
   737     071A  39FB               	andlw	251
   738     071B  0087               	movwf	7
   739     071C                     l849:
   740                           
   741                           ;main.c: 139:                  delayMS(250);
   742     071C  30FA               	movlw	250
   743     071D  00F0               	movwf	delayMS@M
   744     071E  3000               	movlw	0
   745     071F  00F1               	movwf	delayMS@M+1
   746     0720  120A  118A  255C  120A  118A  	fcall	_delayMS
   747     0725                     l851:
   748                           
   749                           ;main.c: 140:                  if(((*((char*)0x06)>>5)&0x01)==0){
   750     0725  1283               	bcf	3,5	;RP0=0, select bank0
   751     0726  1303               	bcf	3,6	;RP1=0, select bank0
   752     0727  0806               	movf	6,w
   753     0728  00F7               	movwf	??_main
   754     0729  3005               	movlw	5
   755     072A                     u395:
   756     072A  1003               	clrc
   757     072B  0CF7               	rrf	??_main,f
   758     072C  3EFF               	addlw	-1
   759     072D  1D03               	skipz
   760     072E  2F2A               	goto	u395
   761     072F  1877               	btfsc	??_main,0
   762     0730  2F32               	goto	u401
   763     0731  2F33               	goto	u400
   764     0732                     u401:
   765     0732  2F3A               	goto	l855
   766     0733                     u400:
   767     0733                     l853:
   768                           
   769                           ;main.c: 141:                       modeNum++;
   770     0733  3001               	movlw	1
   771     0734  07F8               	addwf	main@modeNum,f
   772     0735  1803               	skipnc
   773     0736  0AF9               	incf	main@modeNum+1,f
   774     0737  3000               	movlw	0
   775     0738  07F9               	addwf	main@modeNum+1,f
   776                           
   777                           ;main.c: 142:                       break;
   778     0739  2FF1               	goto	l903
   779     073A                     l855:
   780                           
   781                           ;main.c: 129:             while(modeNum==5)
   782     073A  3005               	movlw	5
   783     073B  0678               	xorwf	main@modeNum,w
   784     073C  0479               	iorwf	main@modeNum+1,w
   785     073D  1903               	btfsc	3,2
   786     073E  2F40               	goto	u411
   787     073F  2F41               	goto	u410
   788     0740                     u411:
   789     0740  2EF2               	goto	l837
   790     0741                     u410:
   791     0741  2FF1               	goto	l903
   792     0742                     l857:
   793                           
   794                           ;main.c: 148:                 *((char*)0x07) = *((char*)0x07) & ~(1 << 3);
   795     0742  1283               	bcf	3,5	;RP0=0, select bank0
   796     0743  1303               	bcf	3,6	;RP1=0, select bank0
   797     0744  0807               	movf	7,w
   798     0745  39F7               	andlw	247
   799     0746  0087               	movwf	7
   800                           
   801                           ;main.c: 149:                 *((char*)0x07) = *((char*)0x07) & ~(1 << 2);
   802     0747  0807               	movf	7,w
   803     0748  39FB               	andlw	251
   804     0749  0087               	movwf	7
   805                           
   806                           ;main.c: 150:                 *((char*)0x07) = *((char*)0x07) & ~(1 << 1);
   807     074A  0807               	movf	7,w
   808     074B  39FD               	andlw	253
   809     074C  0087               	movwf	7
   810     074D                     l859:
   811                           
   812                           ;main.c: 151:                 delayMS(500);
   813     074D  30F4               	movlw	244
   814     074E  00F0               	movwf	delayMS@M
   815     074F  3001               	movlw	1
   816     0750  00F1               	movwf	delayMS@M+1
   817     0751  120A  118A  255C  120A  118A  	fcall	_delayMS
   818     0756                     l861:
   819                           
   820                           ;main.c: 153:                 *((char*)0x07) = *((char*)0x07) | (1 << 3);
   821     0756  1283               	bcf	3,5	;RP0=0, select bank0
   822     0757  1303               	bcf	3,6	;RP1=0, select bank0
   823     0758  0807               	movf	7,w
   824     0759  3808               	iorlw	8
   825     075A  0087               	movwf	7
   826     075B                     l863:
   827                           
   828                           ;main.c: 154:                 *((char*)0x07) = *((char*)0x07) & ~(1 << 2);
   829     075B  0807               	movf	7,w
   830     075C  39FB               	andlw	251
   831     075D  0087               	movwf	7
   832     075E                     l865:
   833                           
   834                           ;main.c: 155:                 *((char*)0x07) = *((char*)0x07) & ~(1 << 1);
   835     075E  0807               	movf	7,w
   836     075F  39FD               	andlw	253
   837     0760  0087               	movwf	7
   838                           
   839                           ;main.c: 156:                 delayMS(500);
   840     0761  30F4               	movlw	244
   841     0762  00F0               	movwf	delayMS@M
   842     0763  3001               	movlw	1
   843     0764  00F1               	movwf	delayMS@M+1
   844     0765  120A  118A  255C  120A  118A  	fcall	_delayMS
   845     076A                     l867:
   846                           
   847                           ;main.c: 158:                 *((char*)0x07) = *((char*)0x07) & ~(1 << 3);
   848     076A  1283               	bcf	3,5	;RP0=0, select bank0
   849     076B  1303               	bcf	3,6	;RP1=0, select bank0
   850     076C  0807               	movf	7,w
   851     076D  39F7               	andlw	247
   852     076E  0087               	movwf	7
   853     076F                     l869:
   854                           
   855                           ;main.c: 159:                 *((char*)0x07) = *((char*)0x07) | (1 << 2);
   856     076F  0807               	movf	7,w
   857     0770  3804               	iorlw	4
   858     0771  0087               	movwf	7
   859     0772                     l871:
   860                           
   861                           ;main.c: 160:                 *((char*)0x07) = *((char*)0x07) & ~(1 << 1);
   862     0772  0807               	movf	7,w
   863     0773  39FD               	andlw	253
   864     0774  0087               	movwf	7
   865     0775                     l873:
   866                           
   867                           ;main.c: 161:                 delayMS(500);
   868     0775  30F4               	movlw	244
   869     0776  00F0               	movwf	delayMS@M
   870     0777  3001               	movlw	1
   871     0778  00F1               	movwf	delayMS@M+1
   872     0779  120A  118A  255C  120A  118A  	fcall	_delayMS
   873                           
   874                           ;main.c: 163:                 *((char*)0x07) = *((char*)0x07) | (1 << 3);
   875     077E  1283               	bcf	3,5	;RP0=0, select bank0
   876     077F  1303               	bcf	3,6	;RP1=0, select bank0
   877     0780  0807               	movf	7,w
   878     0781  3808               	iorlw	8
   879     0782  0087               	movwf	7
   880                           
   881                           ;main.c: 164:                 *((char*)0x07) = *((char*)0x07) | (1 << 2);
   882     0783  0807               	movf	7,w
   883     0784  3804               	iorlw	4
   884     0785  0087               	movwf	7
   885                           
   886                           ;main.c: 165:                 *((char*)0x07) = *((char*)0x07) & ~(1 << 1);
   887     0786  0807               	movf	7,w
   888     0787  39FD               	andlw	253
   889     0788  0087               	movwf	7
   890     0789                     l875:
   891                           
   892                           ;main.c: 166:                 delayMS(500);
   893     0789  30F4               	movlw	244
   894     078A  00F0               	movwf	delayMS@M
   895     078B  3001               	movlw	1
   896     078C  00F1               	movwf	delayMS@M+1
   897     078D  120A  118A  255C  120A  118A  	fcall	_delayMS
   898     0792                     l877:
   899                           
   900                           ;main.c: 168:                 *((char*)0x07) = *((char*)0x07) & ~(1 << 3);
   901     0792  1283               	bcf	3,5	;RP0=0, select bank0
   902     0793  1303               	bcf	3,6	;RP1=0, select bank0
   903     0794  0807               	movf	7,w
   904     0795  39F7               	andlw	247
   905     0796  0087               	movwf	7
   906     0797                     l879:
   907                           
   908                           ;main.c: 169:                 *((char*)0x07) = *((char*)0x07) & ~(1 << 2);
   909     0797  0807               	movf	7,w
   910     0798  39FB               	andlw	251
   911     0799  0087               	movwf	7
   912     079A                     l881:
   913                           
   914                           ;main.c: 170:                 *((char*)0x07) = *((char*)0x07) | (1 << 1);
   915     079A  0807               	movf	7,w
   916     079B  3802               	iorlw	2
   917     079C  0087               	movwf	7
   918                           
   919                           ;main.c: 171:                 delayMS(500);
   920     079D  30F4               	movlw	244
   921     079E  00F0               	movwf	delayMS@M
   922     079F  3001               	movlw	1
   923     07A0  00F1               	movwf	delayMS@M+1
   924     07A1  120A  118A  255C  120A  118A  	fcall	_delayMS
   925     07A6                     l883:
   926                           
   927                           ;main.c: 173:                 *((char*)0x07) = *((char*)0x07) | (1 << 3);
   928     07A6  1283               	bcf	3,5	;RP0=0, select bank0
   929     07A7  1303               	bcf	3,6	;RP1=0, select bank0
   930     07A8  0807               	movf	7,w
   931     07A9  3808               	iorlw	8
   932     07AA  0087               	movwf	7
   933     07AB                     l885:
   934                           
   935                           ;main.c: 174:                 *((char*)0x07) = *((char*)0x07) & ~(1 << 2);
   936     07AB  0807               	movf	7,w
   937     07AC  39FB               	andlw	251
   938     07AD  0087               	movwf	7
   939     07AE                     l887:
   940                           
   941                           ;main.c: 175:                 *((char*)0x07) = *((char*)0x07) | (1 << 1);
   942     07AE  0807               	movf	7,w
   943     07AF  3802               	iorlw	2
   944     07B0  0087               	movwf	7
   945     07B1                     l889:
   946                           
   947                           ;main.c: 176:                 delayMS(500);
   948     07B1  30F4               	movlw	244
   949     07B2  00F0               	movwf	delayMS@M
   950     07B3  3001               	movlw	1
   951     07B4  00F1               	movwf	delayMS@M+1
   952     07B5  120A  118A  255C  120A  118A  	fcall	_delayMS
   953                           
   954                           ;main.c: 178:                 *((char*)0x07) = *((char*)0x07) & ~(1 << 3);
   955     07BA  1283               	bcf	3,5	;RP0=0, select bank0
   956     07BB  1303               	bcf	3,6	;RP1=0, select bank0
   957     07BC  0807               	movf	7,w
   958     07BD  39F7               	andlw	247
   959     07BE  0087               	movwf	7
   960                           
   961                           ;main.c: 179:                 *((char*)0x07) = *((char*)0x07) | (1 << 2);
   962     07BF  0807               	movf	7,w
   963     07C0  3804               	iorlw	4
   964     07C1  0087               	movwf	7
   965                           
   966                           ;main.c: 180:                 *((char*)0x07) = *((char*)0x07) | (1 << 1);
   967     07C2  0807               	movf	7,w
   968     07C3  3802               	iorlw	2
   969     07C4  0087               	movwf	7
   970     07C5                     l891:
   971                           
   972                           ;main.c: 181:                 delayMS(500);
   973     07C5  30F4               	movlw	244
   974     07C6  00F0               	movwf	delayMS@M
   975     07C7  3001               	movlw	1
   976     07C8  00F1               	movwf	delayMS@M+1
   977     07C9  120A  118A  255C  120A  118A  	fcall	_delayMS
   978     07CE                     l893:
   979                           
   980                           ;main.c: 183:                 *((char*)0x07) = *((char*)0x07) | (1 << 3);
   981     07CE  1283               	bcf	3,5	;RP0=0, select bank0
   982     07CF  1303               	bcf	3,6	;RP1=0, select bank0
   983     07D0  0807               	movf	7,w
   984     07D1  3808               	iorlw	8
   985     07D2  0087               	movwf	7
   986     07D3                     l895:
   987                           
   988                           ;main.c: 184:                 *((char*)0x07) = *((char*)0x07) | (1 << 2);
   989     07D3  0807               	movf	7,w
   990     07D4  3804               	iorlw	4
   991     07D5  0087               	movwf	7
   992     07D6                     l897:
   993                           
   994                           ;main.c: 185:                 *((char*)0x07) = *((char*)0x07) | (1 << 1);
   995     07D6  0807               	movf	7,w
   996     07D7  3802               	iorlw	2
   997     07D8  0087               	movwf	7
   998                           
   999                           ;main.c: 186:                 delayMS(500);
  1000     07D9  30F4               	movlw	244
  1001     07DA  00F0               	movwf	delayMS@M
  1002     07DB  3001               	movlw	1
  1003     07DC  00F1               	movwf	delayMS@M+1
  1004     07DD  120A  118A  255C  120A  118A  	fcall	_delayMS
  1005     07E2                     l899:
  1006                           
  1007                           ;main.c: 188:                 if(((*((char*)0x06)>>5)&0x01)==0){
  1008     07E2  1283               	bcf	3,5	;RP0=0, select bank0
  1009     07E3  1303               	bcf	3,6	;RP1=0, select bank0
  1010     07E4  0806               	movf	6,w
  1011     07E5  00F7               	movwf	??_main
  1012     07E6  3005               	movlw	5
  1013     07E7                     u425:
  1014     07E7  1003               	clrc
  1015     07E8  0CF7               	rrf	??_main,f
  1016     07E9  3EFF               	addlw	-1
  1017     07EA  1D03               	skipz
  1018     07EB  2FE7               	goto	u425
  1019     07EC  1877               	btfsc	??_main,0
  1020     07ED  2FEF               	goto	u431
  1021     07EE  2FF0               	goto	u430
  1022     07EF                     u431:
  1023     07EF  2FF1               	goto	l903
  1024     07F0                     u430:
  1025     07F0  2D97               	goto	l761
  1026     07F1                     l903:
  1027                           
  1028                           ;main.c: 146:             while (modeNum == 6){
  1029     07F1  3006               	movlw	6
  1030     07F2  0678               	xorwf	main@modeNum,w
  1031     07F3  0479               	iorwf	main@modeNum+1,w
  1032     07F4  1903               	btfsc	3,2
  1033     07F5  2FF7               	goto	u441
  1034     07F6  2FF8               	goto	u440
  1035     07F7                     u441:
  1036     07F7  2F42               	goto	l857
  1037     07F8                     u440:
  1038     07F8  2D9B               	goto	l763
  1039     07F9  120A  118A  2800   	ljmp	start
  1040     07FC                     __end_of_main:
  1041                           
  1042                           	psect	text1
  1043     055C                     __ptext1:	
  1044 ;; *************** function _delayMS *****************
  1045 ;; Defined at:
  1046 ;;		line 39 in file "main.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;  M               2    0[COMMON] int 
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;  j               2    5[COMMON] int 
  1051 ;;  i               2    3[COMMON] int 
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  1    wreg      void 
  1054 ;; Registers used:
  1055 ;;		wreg, status,2, btemp+1
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1061 ;;      Params:         2       0       0       0       0
  1062 ;;      Locals:         4       0       0       0       0
  1063 ;;      Temps:          1       0       0       0       0
  1064 ;;      Totals:         7       0       0       0       0
  1065 ;;Total ram usage:        7 bytes
  1066 ;; Hardware stack levels used: 1
  1067 ;; This function calls:
  1068 ;;		Nothing
  1069 ;; This function is called by:
  1070 ;;		_main
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074     055C                     _delayMS:	
  1075                           ;psect for function _delayMS
  1076                           
  1077     055C                     l745:	
  1078                           ;incstack = 0
  1079                           ; Regs used in _delayMS: [wreg+status,2+btemp+1]
  1080                           
  1081                           
  1082                           ;main.c: 40:     int i, j;;main.c: 41:     for (i = 0; i<M ; i++){
  1083     055C  01F3               	clrf	delayMS@i
  1084     055D  01F4               	clrf	delayMS@i+1
  1085     055E  2D7A               	goto	l3
  1086     055F                     l747:
  1087                           
  1088                           ;main.c: 42:         for (j = 0; j<80; j++){
  1089     055F  01F5               	clrf	delayMS@j
  1090     0560  01F6               	clrf	delayMS@j+1
  1091     0561                     l753:
  1092                           
  1093                           ;main.c: 44:         }
  1094     0561  3001               	movlw	1
  1095     0562  07F5               	addwf	delayMS@j,f
  1096     0563  1803               	skipnc
  1097     0564  0AF6               	incf	delayMS@j+1,f
  1098     0565  3000               	movlw	0
  1099     0566  07F6               	addwf	delayMS@j+1,f
  1100     0567                     l755:
  1101     0567  0876               	movf	delayMS@j+1,w
  1102     0568  3A80               	xorlw	128
  1103     0569  00FF               	movwf	btemp+1
  1104     056A  3080               	movlw	128
  1105     056B  027F               	subwf	btemp+1,w
  1106     056C  1D03               	skipz
  1107     056D  2D70               	goto	u235
  1108     056E  3050               	movlw	80
  1109     056F  0275               	subwf	delayMS@j,w
  1110     0570                     u235:
  1111     0570  1C03               	skipc
  1112     0571  2D73               	goto	u231
  1113     0572  2D74               	goto	u230
  1114     0573                     u231:
  1115     0573  2D61               	goto	l753
  1116     0574                     u230:
  1117     0574                     l757:
  1118                           
  1119                           ;main.c: 45:     }
  1120     0574  3001               	movlw	1
  1121     0575  07F3               	addwf	delayMS@i,f
  1122     0576  1803               	skipnc
  1123     0577  0AF4               	incf	delayMS@i+1,f
  1124     0578  3000               	movlw	0
  1125     0579  07F4               	addwf	delayMS@i+1,f
  1126     057A                     l3:
  1127     057A  0874               	movf	delayMS@i+1,w
  1128     057B  3A80               	xorlw	128
  1129     057C  00F2               	movwf	??_delayMS
  1130     057D  0871               	movf	delayMS@M+1,w
  1131     057E  3A80               	xorlw	128
  1132     057F  0272               	subwf	??_delayMS,w
  1133     0580  1D03               	skipz
  1134     0581  2D84               	goto	u245
  1135     0582  0870               	movf	delayMS@M,w
  1136     0583  0273               	subwf	delayMS@i,w
  1137     0584                     u245:
  1138     0584  1C03               	skipc
  1139     0585  2D87               	goto	u241
  1140     0586  2D88               	goto	u240
  1141     0587                     u241:
  1142     0587  2D5F               	goto	l747
  1143     0588                     u240:
  1144     0588                     l8:
  1145     0588  0008               	return
  1146     0589                     __end_of_delayMS:
  1147     0002                     ___latbits      equ	2
  1148     007E                     btemp           set	126	;btemp
  1149     007E                     wtemp0          set	126
  1150                           
  1151                           	psect	idloc
  1152                           
  1153                           ;Config register IDLOC0 @ 0x2000
  1154                           ;	unspecified, using default values
  1155     2000                     	org	8192
  1156     2000  3FFF               	dw	16383
  1157                           
  1158                           ;Config register IDLOC1 @ 0x2001
  1159                           ;	unspecified, using default values
  1160     2001                     	org	8193
  1161     2001  3FFF               	dw	16383
  1162                           
  1163                           ;Config register IDLOC2 @ 0x2002
  1164                           ;	unspecified, using default values
  1165     2002                     	org	8194
  1166     2002  3FFF               	dw	16383
  1167                           
  1168                           ;Config register IDLOC3 @ 0x2003
  1169                           ;	unspecified, using default values
  1170     2003                     	org	8195
  1171     2003  3FFF               	dw	16383
  1172                           
  1173                           	psect	config
  1174                           
  1175                           ;Config register CONFIG @ 0x2007
  1176                           ;	Oscillator Selection bits
  1177                           ;	FOSC = XT, XT oscillator
  1178                           ;	Watchdog Timer Enable bit
  1179                           ;	WDTE = OFF, WDT disabled
  1180                           ;	Power-up Timer Enable bit
  1181                           ;	PWRTE = OFF, PWRT disabled
  1182                           ;	Brown-out Reset Enable bit
  1183                           ;	BOREN = OFF, BOR disabled
  1184                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1185                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1186                           ;	Data EEPROM Memory Code Protection bit
  1187                           ;	CPD = OFF, Data EEPROM code protection off
  1188                           ;	Flash Program Memory Write Enable bits
  1189                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1190                           ;	In-Circuit Debugger Mode bit
  1191                           ;	DEBUG = 0x1, unprogrammed default
  1192                           ;	Flash Program Memory Code Protection bit
  1193                           ;	CP = OFF, Code protection off
  1194     2007                     	org	8199
  1195     2007  3FB9               	dw	16313

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_delayMS

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     256
                                              7 COMMON     3     3      0
                            _delayMS
 ---------------------------------------------------------------------------------
 (1) _delayMS                                              7     5      2     117
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delayMS

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     10      10     71.4%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      10      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Jul 15 15:38:57 2025

                      l3 057A                        l8 0588                      l801 0642  
                    l803 0647                      l811 0679                      l821 06A2  
                    l813 0681                      l805 065B                      l903 07F1  
                    l831 06D5                      l823 06B0                      l815 0686  
                    l807 0664                      l753 0561                      l745 055C  
                    l841 0703                      l833 06E3                      l825 06B9  
                    l817 068F                      l809 0672                      l761 0597  
                    l755 0567                      l747 055F                      l851 0725  
                    l843 0708                      l827 06C7                      l819 069D  
                    l835 06EA                      l771 05BE                      l763 059B  
                    l757 0574                      l861 0756                      l853 0733  
                    l845 070B                      l837 06F2                      l829 06CC  
                    l781 05E8                      l773 05CC                      l871 0772  
                    l863 075B                      l847 0717                      l839 06FA  
                    l855 073A                      l783 05EB                      l791 0615  
                    l767 05AA                      l775 05D3                      l759 0589  
                    l881 079A                      l873 0775                      l865 075E  
                    l857 0742                      l849 071C                      l793 061C  
                    l785 05EE                      l777 05DA                      l769 05B5  
                    l891 07C5                      l883 07A6                      l875 0789  
                    l867 076A                      l859 074D                      l795 0626  
                    l787 0602                      l779 05E3                      l893 07CE  
                    l885 07AB                      l877 0792                      l869 076F  
                    l797 062B                      l789 060E                      l895 07D3  
                    l887 07AE                      l879 0797                      l799 0634  
                    l897 07D6                      l889 07B1                      l899 07E2  
                    u230 0574                      u310 060E                      u231 0573  
                    u311 060D                      u240 0588                      u400 0733  
                    u320 061C                      u241 0587                      u401 0732  
                    u321 061B                      u305 0605                      u410 0741  
                    u235 0570                      u411 0740                      u340 0672  
                    u260 05A9                      u245 0584                      u341 0671  
                    u261 05A8                      u430 07F0                      u350 0680  
                    u431 07EF                      u351 067F                      u335 0669  
                    u255 05A0                      u440 07F8                      u280 05CC  
                    u441 07F7                      u425 07E7                      u281 05CB  
                    u370 06E3                      u290 05D9                      u371 06E2  
                    u291 05D8                      u275 05C3                      u380 06F1  
                    u381 06F0                      u365 06DA                      u395 072A  
            main@modeNum 0078                     _main 0589                     btemp 007E  
                   start 0000                    ?_main 0070          __end_of_delayMS 0589  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0077                ??_delayMS 0072  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 0589  
                _delayMS 055C                  __ptext1 055C     end_of_initialization 07FC  
    start_initialization 07FC                ___latbits 0002                 ?_delayMS 0070  
               delayMS@M 0070                 delayMS@i 0073                 delayMS@j 0075  
